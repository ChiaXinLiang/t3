#!/bin/bash

# Load configuration from servers.yaml
CONFIG_FILE="djangoFlex/djangoFlex/config/servers.yaml"

# Function to get value from YAML file
get_config_value() {
    local key=$1
    grep -E "^${key}:" $CONFIG_FILE | awk '{print $2}'
}

# MLflow Configuration
MLFLOW_TRACKING_URI=$(get_config_value "MLFLOW_TRACKING_URI")
MLFLOW_BACKEND_STORE=$(get_config_value "MLFLOW_BACKEND_STORE")
MLFLOW_SERVER_PORT=$(get_config_value "MLFLOW_SERVER_PORT")
MLFLOW_SERVER_HOST=$(get_config_value "MLFLOW_SERVER_HOST")
MLFLOW_DOCKER_IMAGE=$(get_config_value "MLFLOW_DOCKER_IMAGE")
MLFLOW_DOCKER_CONTAINER_NAME=$(get_config_value "MLFLOW_DOCKER_CONTAINER_NAME")

# RabbitMQ Configuration
RABBITMQ_HOST=$(get_config_value "RABBITMQ_HOST")
RABBITMQ_PORT=$(get_config_value "RABBITMQ_PORT")
RABBITMQ_DASHBOARD_PORT=$(get_config_value "RABBITMQ_DASHBOARD_PORT")
RABBITMQ_USER=$(get_config_value "RABBITMQ_USER")
RABBITMQ_PASSWORD=$(get_config_value "RABBITMQ_PASSWORD")
RABBITMQ_VHOST=$(get_config_value "RABBITMQ_VHOST")
RABBITMQ_SERVER_PATH=$(get_config_value "RABBITMQ_SERVER_PATH")
RABBITMQ_DOCKER_IMAGE=$(get_config_value "RABBITMQ_DOCKER_IMAGE")
RABBITMQ_DOCKER_CONTAINER_NAME=$(get_config_value "RABBITMQ_DOCKER_CONTAINER_NAME")

# Celery Configuration
CELERY_BROKER_URL=$(get_config_value "CELERY_BROKER_URL")
CELERY_RESULT_BACKEND=$(get_config_value "CELERY_RESULT_BACKEND")

# Django Configuration
DJANGO_SECRET_KEY=$(get_config_value "DJANGO_SECRET_KEY")
DEBUG=$(get_config_value "DEBUG")
ALLOWED_HOSTS=$(get_config_value "ALLOWED_HOSTS")

# SRS Configuration
SRS_SERVER_HOST=$(get_config_value "SRS_SERVER_HOST")
SRS_SERVER_PORT=$(get_config_value "SRS_SERVER_PORT")
SRS_HTTP_SERVER_PORT=$(get_config_value "SRS_HTTP_SERVER_PORT")
SRS_DOCKER_IMAGE=$(get_config_value "SRS_DOCKER_IMAGE")
SRS_DOCKER_CONTAINER_NAME=$(get_config_value "SRS_DOCKER_CONTAINER_NAME")

# MySQL Configuration
MYSQL_SERVER_HOST=$(get_config_value "MYSQL_SERVER_HOST")
MYSQL_SERVER_PORT=$(get_config_value "MYSQL_SERVER_PORT")
MYSQL_ROOT_USER=$(get_config_value "MYSQL_ROOT_USER")
MYSQL_ROOT_PASSWORD=$(get_config_value "MYSQL_ROOT_PASSWORD")
MYSQL_DATABASE=$(get_config_value "MYSQL_DATABASE")
MYSQL_DOCKER_IMAGE=$(get_config_value "MYSQL_DOCKER_IMAGE")
MYSQL_DOCKER_CONTAINER_NAME=$(get_config_value "MYSQL_DOCKER_CONTAINER_NAME")
MYSQL_DATA_DIR=$(get_config_value "MYSQL_DATA_DIR")

# VisionAI Configuration
VISIONAI_RULE_CONFIG_PATH=$(get_config_value "VISIONAI_RULE_CONFIG_PATH")
VISIONAI_ROLE_CONFIG_PATH=$(get_config_value "VISIONAI_ROLE_CONFIG_PATH")
VISIONAI_ENTITY_TYPE_CONFIG_PATH=$(get_config_value "VISIONAI_ENTITY_TYPE_CONFIG_PATH")
VISIONAI_SCENE_TYPE_CONFIG_PATH=$(get_config_value "VISIONAI_SCENE_TYPE_CONFIG_PATH")

# Redis Server Configuration
REDIS_SERVER_HOST=$(get_config_value "REDIS_SERVER_HOST")
REDIS_SERVER_PORT=$(get_config_value "REDIS_SERVER_PORT")
REDIS_DOCKER_IMAGE=$(get_config_value "REDIS_DOCKER_IMAGE")
REDIS_DOCKER_CONTAINER_NAME=$(get_config_value "REDIS_DOCKER_CONTAINER_NAME")
REDIS_DATA_DIR=$(get_config_value "REDIS_DATA_DIR")

# PostgreSQL Configuration
POSTGRES_SERVER_HOST=$(get_config_value "POSTGRES_SERVER_HOST")
POSTGRES_SERVER_PORT=$(get_config_value "POSTGRES_SERVER_PORT")
POSTGRES_ROOT_USER=$(get_config_value "POSTGRES_ROOT_USER")
POSTGRES_ROOT_PASSWORD=$(get_config_value "POSTGRES_ROOT_PASSWORD")
POSTGRES_DATABASE=$(get_config_value "POSTGRES_DATABASE")
POSTGRES_DOCKER_IMAGE=$(get_config_value "POSTGRES_DOCKER_IMAGE")
POSTGRES_DOCKER_CONTAINER_NAME=$(get_config_value "POSTGRES_DOCKER_CONTAINER_NAME")
POSTGRES_DATA_DIR=$(get_config_value "POSTGRES_DATA_DIR")

# Debug log function
log_debug() {
    echo "[DEBUG] $1"
}

# Print all configuration values
log_debug "MLFLOW_TRACKING_URI: $MLFLOW_TRACKING_URI"
log_debug "MLFLOW_BACKEND_STORE: $MLFLOW_BACKEND_STORE"
log_debug "MLFLOW_SERVER_PORT: $MLFLOW_SERVER_PORT"
log_debug "MLFLOW_SERVER_HOST: $MLFLOW_SERVER_HOST"
log_debug "MLFLOW_DOCKER_IMAGE: $MLFLOW_DOCKER_IMAGE"
log_debug "MLFLOW_DOCKER_CONTAINER_NAME: $MLFLOW_DOCKER_CONTAINER_NAME"

log_debug "RABBITMQ_HOST: $RABBITMQ_HOST"
log_debug "RABBITMQ_PORT: $RABBITMQ_PORT"
log_debug "RABBITMQ_DASHBOARD_PORT: $RABBITMQ_DASHBOARD_PORT"
log_debug "RABBITMQ_USER: $RABBITMQ_USER"
log_debug "RABBITMQ_PASSWORD: $RABBITMQ_PASSWORD"
log_debug "RABBITMQ_VHOST: $RABBITMQ_VHOST"
log_debug "RABBITMQ_SERVER_PATH: $RABBITMQ_SERVER_PATH"
log_debug "RABBITMQ_DOCKER_IMAGE: $RABBITMQ_DOCKER_IMAGE"
log_debug "RABBITMQ_DOCKER_CONTAINER_NAME: $RABBITMQ_DOCKER_CONTAINER_NAME"

log_debug "CELERY_BROKER_URL: $CELERY_BROKER_URL"
log_debug "CELERY_RESULT_BACKEND: $CELERY_RESULT_BACKEND"

log_debug "DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY"
log_debug "DEBUG: $DEBUG"
log_debug "ALLOWED_HOSTS: $ALLOWED_HOSTS"

log_debug "SRS_SERVER_HOST: $SRS_SERVER_HOST"
log_debug "SRS_SERVER_PORT: $SRS_SERVER_PORT"
log_debug "SRS_HTTP_SERVER_PORT: $SRS_HTTP_SERVER_PORT"
log_debug "SRS_DOCKER_IMAGE: $SRS_DOCKER_IMAGE"
log_debug "SRS_DOCKER_CONTAINER_NAME: $SRS_DOCKER_CONTAINER_NAME"

log_debug "MYSQL_SERVER_HOST: $MYSQL_SERVER_HOST"
log_debug "MYSQL_SERVER_PORT: $MYSQL_SERVER_PORT"
log_debug "MYSQL_ROOT_USER: $MYSQL_ROOT_USER"
log_debug "MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD"
log_debug "MYSQL_DATABASE: $MYSQL_DATABASE"
log_debug "MYSQL_DOCKER_IMAGE: $MYSQL_DOCKER_IMAGE"
log_debug "MYSQL_DOCKER_CONTAINER_NAME: $MYSQL_DOCKER_CONTAINER_NAME"
log_debug "MYSQL_DATA_DIR: $MYSQL_DATA_DIR"

log_debug "VISIONAI_RULE_CONFIG_PATH: $VISIONAI_RULE_CONFIG_PATH"
log_debug "VISIONAI_ROLE_CONFIG_PATH: $VISIONAI_ROLE_CONFIG_PATH"
log_debug "VISIONAI_ENTITY_TYPE_CONFIG_PATH: $VISIONAI_ENTITY_TYPE_CONFIG_PATH"
log_debug "VISIONAI_SCENE_TYPE_CONFIG_PATH: $VISIONAI_SCENE_TYPE_CONFIG_PATH"

log_debug "REDIS_SERVER_HOST: $REDIS_SERVER_HOST"
log_debug "REDIS_SERVER_PORT: $REDIS_SERVER_PORT"
log_debug "REDIS_DOCKER_IMAGE: $REDIS_DOCKER_IMAGE"
log_debug "REDIS_DOCKER_CONTAINER_NAME: $REDIS_DOCKER_CONTAINER_NAME"
log_debug "REDIS_DATA_DIR: $REDIS_DATA_DIR"

log_debug "POSTGRES_SERVER_HOST: $POSTGRES_SERVER_HOST"
log_debug "POSTGRES_SERVER_PORT: $POSTGRES_SERVER_PORT"
log_debug "POSTGRES_ROOT_USER: $POSTGRES_ROOT_USER"
log_debug "POSTGRES_ROOT_PASSWORD: $POSTGRES_ROOT_PASSWORD"
log_debug "POSTGRES_DATABASE: $POSTGRES_DATABASE"
log_debug "POSTGRES_DOCKER_IMAGE: $POSTGRES_DOCKER_IMAGE"
log_debug "POSTGRES_DOCKER_CONTAINER_NAME: $POSTGRES_DOCKER_CONTAINER_NAME"
log_debug "POSTGRES_DATA_DIR: $POSTGRES_DATA_DIR"

# Start MLflow Docker container
# log_debug "Starting MLflow Docker container with image $MLFLOW_DOCKER_IMAGE"
# docker run -d --name $MLFLOW_DOCKER_CONTAINER_NAME \
#     -p $MLFLOW_SERVER_PORT:$MLFLOW_SERVER_PORT \
#     -v $MLFLOW_BACKEND_STORE:/mlflow/mlruns \
#     $MLFLOW_DOCKER_IMAGE mlflow server \
#     --backend-store-uri mlruns \
#     --host 0.0.0.0 \
#     --port $MLFLOW_SERVER_PORT

# Start RabbitMQ Docker container
log_debug "Starting RabbitMQ Docker container with image $RABBITMQ_DOCKER_IMAGE"
docker container run -d --name rabbitmq_container \
    -p 5672:5672 \
    -p 15672:15672 \
    -e RABBITMQ_DEFAULT_USER=guest \
    -e RABBITMQ_DEFAULT_PASS=guest \
    -e RABBITMQ_DEFAULT_VHOST=/ \
    rabbitmq:3-management

# Start SRS Docker container
log_debug "Starting SRS Docker container with image $SRS_DOCKER_IMAGE"
docker container run -d --name $SRS_DOCKER_CONTAINER_NAME \
    -p SRS_SERVER_PORT:$SRS_SERVER_PORT \
    -p SRS_HTTP_SERVER_PORT:$SRS_HTTP_SERVER_PORT \
    $SRS_DOCKER_IMAGE

# Start Postgres Docker container
log_debug "Starting Postgres Docker container with image $POSTGRES_DOCKER_IMAGE"
docker container run -d --name $POSTGRES_DOCKER_CONTAINER_NAME \
    -p $POSTGRES_SERVER_PORT:5432 \
    -e POSTGRES_USER=$POSTGRES_ROOT_USER \
    -e POSTGRES_PASSWORD=$POSTGRES_ROOT_PASSWORD \
    -e POSTGRES_DB=$POSTGRES_DATABASE \
    -v $POSTGRES_DATA_DIR:/var/lib/postgresql/data \
    $POSTGRES_DOCKER_IMAGE